generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  status    Int?     @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile Profile?

  @@map("users")
}

model Profile {
  id Int @id @default(autoincrement())

  name     String
  photoUrl String? @db.VarChar(300)
  bio      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  expense Expense[]

  creditCard CreditCard[]

  @@map("profiles")
}

model Expense {
  id        Int @id @default(autoincrement())
  creatorId Int

  name                 String
  description          String?
  value                Decimal
  numberOfInstallments Int
  closesDay            DateTime @db.Date
  paymentMethodId      Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int

  installment Installment[]

  @@map(name: "expenses")
}

model Installment {
  id Int @id @default(autoincrement())

  value     Decimal
  paid      Boolean @default(false)
  number    Int
  closesDay Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId Int

  @@map(name: "installments")
}

model CreditCard {
  id Int @id @default(autoincrement())

  accountName   String
  limit         Decimal
  closesDay     Int
  expirationDay Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  financialInstitution   FinancialInstitution @relation(fields: [financialInstitutionId], references: [id])
  financialInstitutionId Int                  @unique

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int     @unique

  @@map(name: "creditCards")
}

model FinancialInstitution {
  id Int @id @default(autoincrement())

  name    String
  iconUrl String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creditCard CreditCard?

  @@map(name: "financialInstitutions")
}
